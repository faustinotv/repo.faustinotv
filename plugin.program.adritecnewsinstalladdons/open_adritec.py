#!/usr/bin/python
# -*- coding: utf-8 -*-
# encoded by pyprotect
# http://gabrielsilva.tk/pyprotect
#                 -*- adritecNews -*-                      #
#----------------------------------------------------------#
#  INSTALADOR DE ADD-ONS PARA O KODI XBMC - VERSÃO: 2.2.3  #
#----------------------------------------------------------#
# KODI: GPL https://pt.wikipedia.org/wiki/Kodi             #   
# KODI WIKI: https://kodi.wiki/view/Main_Page              #
# PROGRAMAÇÃO: PYTHON: https://docs.python.org/2/tutorial/ #
# CONTATO: adritec_dados@yahooo.com.br                     #
# CANAL: http://YouTube.com/adritecnews                    # 
# SITE: http://adritecnews.com                             #
#----------------------------------------------------------#
#     TODOS OS DIREITOS RESERVADOS: adritecNews 2018       #
#                                                          #
#      Este trabalho está licenciado sob uma Licença       #
#Creative Commons Atribuição-NãoComercial-SemDerivações 4.0# 
#      Internacional. Para ver uma cópia desta licença,    # 
# visite http://creativecommons.org/licenses/by-nc-nd/4.0/ #
#       'Atribuição-Não-Comercial-SemDerivativos 4.0       # 
#             Internacional (CC BY-NC-ND 4.0)'             #
#----------------------------------------------------------#
#                "ATENÇÃO INTERNAUTAS"                     #
#                                                          #
#       FICA PROIBIDO CÓPIA, MODIFICAÇÃO, DIVULGAÇÃO       #
#                SEM MINHA ALTORIZAÇÃO                     #
#    Add-on desenvolvido para fazer AJUSTES no seu KODI,   #
#   para Inscritos e não inscritos do canal adritec News.  #
#----------------------------------------------------------#
import base64, codecs
magic = 'aW1wb3J0IHpsaWINCmltcG9ydCBiYXNlNjQNCmRlZiBlbmNvZGUoa2V5LCBjbGVhcik6DQoJZW5jID0gW10NCglmb3IgaSBpbiByYW5nZShsZW4oY2xlYXIpKToNCgkJa2V5X2MgPSBrZXlbaSAlIGxlbihrZXkpXQ0KCQllbmNfYyA9IGNocigob3JkKGNsZWFyW2ldKSArIG9yZChrZXlfYykpICUgMjU2KQ0KCQllbmMuYXBwZW5kKGVuY19jKQ0KCXJldHVybiBiYXNlNjQudXJsc2FmZV9iNjRlbmNvZGUoJycuam9pbihlbmMpKQ0KZGVmIGRlY29kZShrZXksIGVuYyk6DQoJZGVjID0gW10NCgllbmMgPSBiYXNlNjQudXJsc2FmZV9iNjRkZWNvZGUoZW5jLmVuY29kZSgnYXNjaWknLCdpZ25vcmUnKSkNCglmb3IgaSBpbiByYW5nZShsZW4oZW5jKSk6DQoJCWtleV9jID0ga2V5W2kgJSBsZW4oa2V5KV0NCgkJZGVjX2MgPSBjaHIoKDI1NiArIG9yZChlbmNbaV0pIC0gb3JkKGtleV9jKSkgJSAyNTYpDQoJCWRlYy5hcHBlbmQoZGVjX2MpDQoJcmV0dXJuICcnLmpvaW4oZGVjKQkNCgkNCmV4ZWMoZGVjb2RlKCc0NWhsS09wMzg3NDk2QmNWI0FwNjk0JywnbUpyT2pLcTIxYWVYcjZHbGxhYkV5b1JwNWFpbFhXNF9jZENzdzlGVGRWZFVxS2FuMFg2WXM5eGlXVnVtbDQtVlZWaVRyYUdubXFLaXA0T1RRNXZacG4tZG9KcVF2N19CMmFHZmdJTmhtcVBYdDFHejFaZWRYRjFla1haVXlkbWpucUNnbmxaX2c3Q01zYmFmcFpsY21jbmdySGg2UEZ1YmxhMlhZcUIybmFyZ25LS2dtV1BYM0xDOW1LMmhwNU9ubDZfSWZ5MUsxcVdyVktLVzFkRnJ1TjVUc3FDa241LXV5SVNSb3QyYnBaMm5xWkNWaFZsNVBLR2RWR0NYcHNmRmtXX29vNlZiVko3V2pMbXczWmh5UVQxQ1A3VEl5cGl6M2xhem5hU2IwZGl3ZmVLWW1adGNwNWV2eUg4dFNua19RNWlabTRqVHNNUFBucTZjcHF5ZnNkRi1USHQ2UDUtcG9LSEg0ckRCNDV5bnBaT2lwS2pTZG1CaDZKaW1sMktjemVDVXZkYWloSmlXbnFKcWlxbWN0T1NicG1KMnF0SFlyNlhWcGF1Z282ZGRhMjFmaGFMam02LVpwcWpSMjdsdnJWT2VyS0NsbGJqSXlKYXEzNlNZbmFLYjE1cS12OXljckY5V1oxaHJiVi1Nci1TWW1xZVpWYVdNdEwza1c1cVlwNTZzcDlYSmpMRGVrV21SWFQ5eDNyREQ1YVdtVjFTaXBMYkZ0NWFtZXAtbXBLT24zSXpEc2QyV1pGZXNtNk9seExxSHNONWlXYXlXb3N2VHdMaWNVN0Nab1p5bXJ0aTlqSy1jVnFpbllGWGI1YjU3a0t1YXBKZXZuTFZ0djVDeDM2aXRWS2VkM2VDMHUzcWNwYWVqcTZwaTJNaVByZG1ZWlZTcHA5VFl0TEdpUGFHa3BLaW90b1BJaUV2Wm82bWpwcW1JenF5NDZKU21tNk5EbjZfVHhaVzFrTENpcEpxZTFORlZ1TjJqcDZtb1dhYXUyTDJNci1TbHFLQ25QOUhadTc3aXAxaXhuYW1jcTgtN0xhcmRwcWltcUZYVzRMdXc1SnRDb0tHcHBiVFhkcDJ0MlpoRG5hR2wxOTZfYi1PbXBFR2RwcWF4MWNwRHRlS1huSm1XbHN2WGQ4THBwa0tkcHFpall0VzdsckRscUp5WnAyUFUxYTE5MUpTY3BxZFpuNl9UeFpXMWtKbW9vcWluMTloM2I5YVlxcW1WcHB1dzE3ZVdiWkNqbXFLcHFjM2FyckRmUFo2cG82Wld0TWpKa3JiaW1aNm5ZcUhSenI1djJhQ29wcWF0VnJqTXU1cTAxYXF0bWFZX3p0NjZ2SkIxblppcHJaLW8yTUoyc09XbVdaMmhwZGZldjIteW1KbXNxS0tjdDgtcGtyYmdRSi1tbzZLSTNyREMzNmlxbXBtc1pLN011SlpoMmFPcG82YXBpTTJ2czktaGw1aVdwWnRNeWNpU3JwQ29ucWVqcXRyUHNNS2VuNkdacDFtZnI5UEZsYldRb2FpWW5XR0l6Y0REMzVpd25KZERuTFRTdzBPNzJhYWZuYUNhaU5XNHY5LWxyRmVPb3FhSXpNS0lTOWFvcUtGVXFkSFpzR19ab0tpbXBxMVd0Yy03aUxFPScpKQ0KDQpkZWYgZGVjb2RlX2Jhc2U2NCggYjY0c3RyaW5nICk6DQogICAgZGVjb2RlZF9kYXRhID0gYmFzZTY0LmI2NGRlY29kZSggYjY0c3RyaW5nICkNCiAgICByZXR1cm4gemxpYi5kZWNvbXByZXNzKCBkZWNvZGVkX2RhdGEgLCAtMTUpDQoNCmRlZiBiYXNlNjRfZW5jb2RlKCBzdHJpbmdfdmFsICk6DQogICAgemxpYmJlZF9zdHIgPSB6bGliLmNvbXByZXNzKCBzdHJpbmdfdmFsICkNCiAgICBjb21wcmVzc2VkX3N0cmluZyA9IHpsaWJiZWRfc3RyWzI6LTRdDQogICAgcmV0dXJuIGJhc2U2NC5iNjRlbmNvZGUoIGNvbXByZXNzZWRfc3RyaW5nICkNCgkNCmV4ZWMoZGVjb2RlX2Jhc2U2NCgnelZiZGJ0czJGTDYybm9JUVVGRENYTXAyRnJSTmtBc2xkbjZHMUE3aVpCMWdHQUV0MGdwVFdkUkVhZzc2T3J2WVEreHVmYkVkVXBMbnhFcnJCQ213QUlITTgvT2RINTV6ZUVMR1pIcldSd2M0UzRwWXBDVExaWnpUQmFFc0Y1cEhLVjhxa1NwTms0UWFVWVVkKzcwUkRCMmc1eXJOcU9KR2JYSTBPaDlkSWlaWnpQTlpVdkRwNUhCYUtVK0N3K2trc0FMVFNpN256QWdNQWRad1VVV09aV0xwbytHNkR'
love = 'hLz1BF1p1Dzc2Z3ZjIxIxEGIHoSMRGxj2nFf5LIScE1u6Fz5FH3ObZIuUFGOUIUMGDmEfHKAyoR00E1q3JIMcDIqBqISiqlgaoKEwqRcUqHEFHQqlFIxeAmEdFKOeLJy5BGA4X0AVAIEKZKAMFUWeH3uxJJMxMHIxrHIKE01loaA3qT8kI0WKq1McH1b1M0V1I1Z3ASD5Y21dJJSlIH9KMmSGI3uyFItkLxyVFmMIAKqQE0kQrHc1HmEBDJAzERcbpISPGJ9BAxkFHJZ5nSOFIaR1MJ5AL0EmHRkYAx1AAzECAIEWnIMCGTWLAKEJH1bjMJcWI3O0H0bmDxAKHz1BHUOwJxI6n0AQE1EiE2IhMaqKDGW4nyARIRWCDzyFISIQJUS5ZxElD3R2M1AhET5ynax0A0yxJRyLo3uvpHL0raScoHMKD1cinRc5Fmq6LJq6JKICBSMcDJERpQMCGHRkJPgOZH5lnIOhE3OxoH9xE0cypKcGAQOnq2LjLyEfrKOzpxSfFRMJHz5SnSASoGEkGzyypyEKJyuaoJEgGT5fY3AcAGIuA1b2pKqnn3uPH2WOZmx4Z2IRnyWjp09DMmOzM3S1XmMBBKV1nxkKq0AvA3EJIGyWDH1GpJSZBUqLBFg0MyuDX1MHqaMvX0b3AxqgpJABnzp1X096pF83Ml9UpGSuLGSBGID0MyqyGT4eIRk5F0EaAUO5n1qgrJgYrRyCGJ41A3qJJSqgZUqcnauXrRq4ozq4A2DjpUu4qyISJRkYI2W3nacLJJx3q2ECJUSkoRuOI1c4F3p0Zz9TnxyTZ2EKM21Bo2uwHx9yERynJQIiJPgYGQuWE003Dxk1n2p3AH5WoIM5pJMLHmydAaWzD01FZyALL2L4MyE0rJISX3y2Y1x2AHyDpRIBZzMVIRAiBQu5AxuIAwq6p2MynwxmZmMTnzgzGmI2DGxlERViJRR3Lv9lDIuQF2cIBSWHI1ydrKWwnF9RpHMVZ3ViH0AAHwIXrUc5ZmNiGmR3ZGAxJGu4H0R3qFgznTIynzg5Lx9lASOZBScfZKyCZyWVqTk4ozAkqIp0IzqcqRLkX0DlHRAmZ3WbAz82rzqkHzSXE1qHBGITX1t0Y0qXL1ORqQuzLx5cFQMkqHuKY3AnLvf2D1RerR5RpKp4DGWQrycFnTt4ZmOmZFgQLvg5pRkfIRMgIzuTZmD3pQu4Y1ccZGyErzumA0t1LzkhrwqnBHf4pH9jJyEdZQuiAIyvZ3AvoSAFYmMbH0WYpmAeqGymHUq0oRAmMUcvA1uCExyGL1IEJQAQARMUL2uVn2EPoTg2AKyYAwuUA082nKcFF1R4DJIgrKbmqJ0mZyuUIKp4q2MXM0gfEHMxLJWSqmSxGTD3JSR2rHESFzWTAKyGovfeIzD3JGI1qaugqzcaBJq3BSuDDv9uAF9HIHgIMHukA05RGlgBLJyDA3b4ryu4Zvf4qSqypzcKrH1vI1EQLHgCIyyLDHAmoTgeX2kEqmAjDyWxBUMkL08jBJcvn0q2ZxcWG3SQAJMioQuEJyMurKO5BHuhpSqWLaVeqap9CFpcXD0XMKuyLluxMJAiMTIsLzSmMGL0XPp3IUcZL3IDFJgKMayYAaR1ZUyno1IFDxMxMUE0rzEXqTyWISImD1qQDGIXLJuvIHgFJJgiIIWcDxSPo1O0ISSCHwydnTp4HT52MGS0ZKqxFTIWBGqhGaMiIP9nGR5lHUqYo0AaI2f4Y0W4FSEWpKS5p3WWrKZiFyWfHzyHoycBMUEzBHWAJQMbEUcGpUEJZaM6HmIwLGunFJc3qmOnIv9znmV5JGEZnIAMpUS1GGqTD20mJTW6MH8eqaR4LauDI3OAZzAhrUcmox1EpJySBSWQDzykJxucnzgIHQAfpFgCGz5nHTcRHGHeZUA3E2I0Hz1wAGu4DwuzqGMyG0cMoJqYEUI2pap0nmWhD3SUGR9DFGxioSR0pzplHSqBZaW6nGI6ZUcSGJW6BJ8kqJAQpJq1q3E2I2qjGGM0nSyTrHMuBIcjZyExGxH5p2qep3SZoHWzGKS1pyMRLJuUAJ1Pq3qvpwt4I001oTEmZJgIp3WDFKAeHRkeHaWYGRkFL1VepzWvp0WunyMuBJWaFxu4X29SoUWSZ0WhAyACnQyVn1tjrIb2FzggIQZeHKu1ZScBMTc6pTyTM0qiMIAAoz92owE3ZzbiqRfjGzkVq1MQARkSqQI4FJgiol9IATIhIGWXMJSTZxuiDzEmLxq5EHkEqIcHracZMTWgMachJUugqF9DDJZjGwH1nGDlqxRmAQR3HScanz1bEmu5o1RlZmIWoUcMrycvp004X21ArIxkYmxjDaAFHJSzGwqOpQRmHJAVJHV4Y29ABSugI0EzZR9LLxWyHGIZJQAlL2R4FGy2D3xeGUIzDHZjY21bBR02D21KBGI5FmVjEJSMBKE4rIDlpzSSDmE6oyOVMQyaox8jFGx5qIq6HSumHybjraEloxuTZ2W6GRIErGEeFzcToHIRZ0V1JIOfH05hracHM1E4MxSSGRE5ZmWGI291Z0A1GRWuDaO6HH5TEmMXMHABFIyuFJIkGJEvFUc5n1RjA3OcMzqQpGylZH03nGOHHIAHnaMkE05XpJAdHGx4rzkWHT5TEKuAnzIyA2Z1BUI2pTMCHGAzGIL4JaOLrPgiIQILFIVmY21gqKyznF8lMUNlX09iAx1dMRE2ATADESS2BJggZyyFMHSBq3uZHKSmoUNko3qLrUWXoyIOHFgWn1EypTL1oQH5o08kpRH1IJ80GFgUFUuHHzS4AmZ4IQteAH5CExMvF1EVq0j0H0ESIHSbE0EMpKyDIzH3AJM5nQDlJyAQM0EeJRMWnJqnoIAVFKuiEJ4krzM6FUWPEyWwAzyPI1SiMKA3L1OzExEdn0yaH3EGDmRkZaZ3oJEiImS1MUWzMH5SIwu1G1WyZ0R5MHuPqKcQD2EbHxMKEKZmG0AmJJt2XmH4ETMIrUIzq01mZxc0pHWlowyOX0uZIRWnYmEMJJIYGHkXZaIuA2cRI3p3oTEBM2SKqHAKFRggHwS4oTkZIRVmLx5cpaceL0qen3q6ARLlGaECpQAaMU'
god = 'hBSE83M1NjM0ZESEkzMDR2djN0b2JwUFJ1bytFRGRXcDJPaVRQUXhaM21UdkNaODRGWk9Rb3hpencxQzZsdVVtSXlBa2tISUVWSC9mU0VXU29aMlh6TGFFaVNUQjEyZGZFdmc0N013OHAyc2lkbmxDRTBFOWtBanNvWlV0ZDNRT3JkbWxNZG1UNVJFS29pNWEvTjJmVmdkMUtaTC91N2I3NzRsSWdpQlJ0d1dBeDA5RnhsUCsrcDRyS2Q2Z2h1KzY5SHdvazNlZGpxZG5FR1B0WnZYK0R6TWJQNjFUT2RUemVkRDNWZHVGY25kbHBScjNmV01lYUV3V2VnRDQ4N283RkwyZk1zSklVR1lTZms2VXRWekw4dTVVcVpZaFUya0dvWk9xSnNaVEZGanRzczZOL0xkcTl2L3VtSmdEYytwZlVFRFFzK29kVjNZaGE4SW4ycm5aSk5yN1RwWnl0STBKd0NESDVFeHQ1WE05NmxKaVJzUjNNOGs2YXpFMkYyRmNSeFJHQWphNkxDUVUrWVdFVFNUOWFNdjZTdEVPeGpweGtRQnU0cFEyeHk5d2M3cDdaOG9XSndyaWpzbDh6V0VMZkJkK2ZsMFBGSEhmTHNnc1JNSTBSaUh4bUNOdlJKVW1Od25RNnZWU2V3b0RYV2tqN1dKYm1oNjZqQkY3VmlKNjRxRzdOOUFsZDFQMG1hbjg2YlQ1cmtkYmt6WVcyNndnVm5nWjNWQ2NKMjRSbGhJZ0hZWllzNGdZUFBJOHRzazVGS2FNVDlrMzFEeU1icjljOUprT1dESWJXcTZ3SVVnY0hFVHJNUDJTTlp6K3grd29LTDVxVWk2cDdzS1BLUUtybWdtbGZ1YXlWSnZzalpCRWZRSVZ3Z2pKcXJSVnpWREg4ZCtqbXNmcnN6RlRnRjU0dXVVSFcxZkd5aURXQWR5akRtWGVhWU8wV2N0VGI2bm8xTmxNSUN4anhWc0p0TEFqZndaQ3phdUxKTzVHM0Z6bHVZSEhtTW1XbU4rYnJJU3R4RTVzUW1TWU1BTU5BTHdYcmdMbHFEYjhPeG9iamx5bW04a2pza0J2c2FTdGhNNG42WFUyTmJaaGdrS0VHeGtKTWplVFViWGdUS2M0a0ZNTnczQjRhbVZkQklzUFJJTHFpWVBlSU5neXNEOTVzRlJ3R3cyQzEvV2lSWjBCdTFNcHBKVkFMaThpVHE4L1QzRVJNSUIwWEd6Tk1kWTNWZjdtajdFQ0xhdlROUTkyT3BLMFhlVDVhT3M3NzVkcmMyd0hVWUttR3N3Wk1xZU9ody9EekpRMVhWOVNLU2dSWFlVN1FqaWhHZEMzRmY2SDFReTFBK1ZBeld4dVU5QXVxc2RrWjNwN3E1cVBCRVJXUE1KVUhlZ2dhSEhFei8xaUF2eWFTdk92Y1J5WkphSFp2OVRnYVBnbFFzSG1SWEFRcFQzbUxsTXhyemc4aWJkUG9mNlBuS2lzQmhwb3U0clpHUm93NzQyVXZaYllsNlJUWGVTYjlaYVRReXArZFl0aHNnTDZvQTFjbWJVbFUzWXl5R2JYRVNMTTRkYWRpQjl6bmNhekhhcE9iNkUzNkpiVzdLcCtjemQ2cG05eUorekVjUk9FSms5ZU5wYXJXcW1MVHlURmVlWTJZejZmVHE3WU53WlBBSDFHMkVSNTc2N0lKbnBsY0gweXR6MEVtdmh1VDVFUFJoSFlTaENBMkZRM2dqMi9JbzZNMllLeDd3WlhQWDBiNFhwQlIremd0Z2ZjVDVnUnVlN2R2bEF1WHJJajdkenBTa2MvNitBZjhlblVIWU16VGpOTkZNcWVadC9UbWZ6dmVQNEIzWWM5MFhDazV1eHZtTVVXSldxSWYwWTBRV0ZsREZPd3VTUlBKRVAveTQ5MVlOOFVPZXY1b05XZUw4WDhFSGRsL05CVzM4cEgvUThidkx6ZnVydHcvM1VqNFFKY0k4OXdxRmxyVER3WWM0TmdORzlMWFdrTk9WS3Y5TEpsVUdxenlWVE42VU54MzFEUFZUV3gyaDdDYjhBcnQ2NmovU0xncG5FWXpMeDBMR0d6MmZYa3dMOGpmdnNZZ1JkNWJVL1o5bExaeUN4bjEyOUNQVEFwbHNGa0M2blFwamt2c1RrdmlyMzkrbDk5Rk5SeHBlb1JYZjNmNy81N3hSOHREL2RBN1ZjM1I5ZnZqN09CK05sVXhqNUh5UFhDaEkzZWxnQlZuU2Z4U0FpQVpuZFVINnFWV0pJNWNuWFZ3WmVUajZPNHZTNkIvcjVqVSt1dG9raUhCMGRGWVk5T3FLNGI0UlhlVCt6a3R2NTdNV3c5dThxRkJrcjJxcEFKUDFMVFZNTDJVS3E0SHJWQk9uc2lrZm4xRis1MnNvVlJMNE4rclBWYWJ1QmpBWlYvdG9GbjdsZ1lCeEgzTDQyS01jYW4rSEpYM3Z6UnF2MVZEcnhyUEpSZEw2NWc4N0lNMm5Jbm9mQ2d6Z2l1djFUNmFid3ZuUjI3NkJUaUxhZWgxWVc4YWlFaG84aWRmTU9VbWQ0aStyNno4UlVBNjhYclBEMmYzM3JVWlMrdllOU1A4YnRBdW9Tc1ZsT1gzeXRqUE1MbFdzWVZWWEJiNWJoODlvcUlvWjNsV2RLMWFVL2RTRjRxWXlnczVLVXBST0t5bWlXMTFEVWwwR0VnNW5ZUUkrVXZnN1pvNEQzbnRIMEttWUtFVzkrcmxLdldwMFk4cGFPY0tyQTMyMlhvTHY1alVuV0VNTlVYVnExbS95YXhtVFdOY05ybklCVlhDL0c4YXRhdnMwa2prdDQ4V0gxRGRPRHcxZTV5ZXN6eHV4clNxSUZTVFlaNUVOK20wQ3NZSCtNbUUreXZUTy9pSDMyRlN6S0oxOTg4VVdHaHBkTFZIaG10cjZBeExUeVByWVlpeVNVbi9KYzdHYzM5TUoxOGU1Y1B2T0w1TWJhY2EveVVWRWczOHZqYjBBZXNVRGk1SE8xT0RiYnpRbS9tdzNBbVpTQzBvb0RIOUxuMVlhaGkvZWk4THZBSFNIVVVVZDdoV0ZzRmFEaTJUeXJ2SExKUkIrVjcvQXo0UjF5bnFNcitXTHJiYnZUV'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))